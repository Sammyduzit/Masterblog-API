{
  "swagger": "2.0",
  "info": {
    "title": "Masterblog API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:5002"
    }
  ],
  "tags": [
    {
      "name": "Post",
      "description": "Post API - CRUD"
    }
  ],
  "paths": {
    "/api/posts": {
      "get": {
        "summary": "Returns all posts",
        "description": "Retrieve all blog posts, optionally sorted by title or content.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Post"
        ],
        "parameters":[
          {
            "name": "sort",
            "in": "query",
            "description": "Sort by field ('title' or 'content')",
            "required": false,
            "type": "string",
            "enum": [
              "title",
              "content"
            ]
          },
          {
            "name": "direction",
            "in": "query",
            "description": "Sort direction ('asc' or 'desc')",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid sorting parameters",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Invalid sorting parameters",
                  "status": 400,
                  "details": ["Direction parameter requires sort parameter."]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Server error while sorting",
                  "status": 500,
                  "details": ["error: Some server error occurred"]
                }
              }
            }
          }
        }
      },
      "post":  {
        "summary": "Creates a new post",
        "description": "Add a new blog post with title and content.",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Post"
        ],
        "parameters":[
          {
            "name": "body",
            "in": "body",
            "description": "Post object that needs to be added",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewPost"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Post created successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid post data",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Invalid post data",
                  "status": 400,
                  "details": ["Missing required field: {field}"]
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Server error while adding post",
                  "status": 500,
                  "details": ["error: Some server error occurred"]
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/{post_id}": {
      "put": {
        "summary": "Updates a post",
        "description": "Updates an existing post by ID",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/json"
        ],
        "tags": [
          "Post"
        ],
        "parameters":[
          {
            "name": "post_id",
            "in": "path",
            "description": "ID of the post to update",
            "required": true,
            "type": "integer",
            "format": "int64"
        },
          {
            "name": "body",
            "in": "body",
            "description": "Post object that needs to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdatePost"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Post updated successfully",
            "schema": {
              "$ref": "#/definitions/Post"
            }
          },
          "400": {
            "description": "Invalid update data",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Invalid update data",
                  "status": 400,
                  "details": ["'invalid_field' is not an allowed field."]
                }
              }
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Post not found",
                  "status": 404,
                  "details": []
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Server error while updating post",
                  "status": 500,
                  "details": ["error: Some server error occurred"]
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Deletes a post",
        "description": "Deletes an existing post by ID",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Post"
        ],
        "parameters":[
          {
            "name": "post_id",
            "in": "path",
            "description": "ID of the post to delete",
            "required": true,
            "type": "integer",
            "format": "int64"
        }
        ],
        "responses": {
          "200": {
            "description": "Post deleted successfully",
            "schema": {
              "$ref": "#/definitions/SuccessMessage"
            }
          },
          "404": {
            "description": "Post not found",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "No post with id <id> found.",
                  "status": 404,
                  "details": []
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Server error while deleting post",
                  "status": 500,
                  "details": ["error: Some server error occurred"]
                }
              }
            }
          }
        }
      }
    },
    "/api/posts/search": {
      "get" : {
        "summary": "Searches posts",
        "description": "Searches for posts by title or content",
        "produces": [
          "application/json"
        ],
        "tags": [
          "Post"
        ],
        "parameters":[
          {
            "name": "title",
            "in": "query",
            "description": "Search by title",
            "required": false,
            "type": "string"
          },
          {
            "name": "content",
            "in": "query",
            "description": "Searches by content",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Post"
              }
            }
          },
          "400": {
            "description": "Search must have at least one parameter",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Search must have at least one parameter",
                  "status": 400,
                  "details": []
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "schema": {
              "$ref": "#/definitions/Error"
            },
            "examples": {
              "application/json": {
                "error": {
                  "message": "Server error while searching posts",
                  "status": 500,
                  "details": ["error: Some server error occurred"]
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Post": {
      "type": "object",
      "required":[
        "id",
        "title",
        "content"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier for the post"
        },
        "title": {
          "type": "string",
          "description": "Title of the post"
        },
        "content": {
          "type": "string",
          "description": "Content of the post"
        }
      }
    },
    "NewPost": {
      "type": "object",
      "required":[
        "title",
        "content"
      ],
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the post"
        },
        "content": {
          "type": "string",
          "description": "Content of the post"
        }
      }
    },
    "UpdatePost": {
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Updated title of the post"
        },
        "content": {
          "type": "string",
          "description": "Updated content of the post"
        }
      }
    },
    "SuccessMessage": {
      "type": "object",
      "required": [
        "message"
      ],
      "properties": {
        "message": {
          "type": "string",
          "description": "Success message"
        }
      }
    },
    "Error": {
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "object",
          "properties": {
            "message": {
              "type": "string",
              "description": "Main error message"
            },
            "status": {
              "type": "integer",
              "description": "HTTP status code"
            },
            "details": {
              "type": "string",
              "description": "Additional details about the error"
            }
          }
        }
      }
    }
  }
}